<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frameworks on James Kingsbury</title>
    <link>http://localhost:1313/frameworks/</link>
    <description>Recent content in Frameworks on James Kingsbury</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    
	<atom:link href="http://localhost:1313/frameworks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Angular</title>
      <link>http://localhost:1313/frameworks/angular/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/angular/</guid>
      <description>What is it? Javascript is a high level scripting language used both server side and client side with ES7 being the latest version of the standard outlined by ECMA.
Most of the popular client side single page application frameworks encourage users to write their code using the ES7 standard, with transcompilers reverting the code back to ES5 for older browsers.
What is it like? ES7 adds some nice language features, such as support for classes, neater arrow functions, promises for async programming and better scoping - definitely a big improvement.</description>
    </item>
    
    <item>
      <title>CodeIgniter</title>
      <link>http://localhost:1313/frameworks/codeigniter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/codeigniter/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>http://localhost:1313/frameworks/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/hugo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Less</title>
      <link>http://localhost:1313/frameworks/less/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/less/</guid>
      <description>What is it? LESS is a CSS preprocessor framwork with features such as mixins, variables and functions.
What is it like? Nice and easy to use with a good clean syntax. I used LESS with several projects because it had good support within the Meteor community but for new projects I would opt to use the slightly more powerful SASS instead.
Projects  Deprecation SASS/SCSS has overtaken this as the CSS pre-processor of choice.</description>
    </item>
    
    <item>
      <title>Mongoose</title>
      <link>http://localhost:1313/frameworks/mongoose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/mongoose/</guid>
      <description>What is it? Mongoose is a NodeJS wrapper that interacts with MongoDB.
What is it like? Powerful and easy to pick up. It has a powerful relational data modelling set up with validation and hooks.
Fragmented documentation can be a bit tricky, but it does keep up to date with new MongoDB features.
Projects  Deprecation As with MongoDB, I would deprecate this in favour of using a relational database.</description>
    </item>
    
    <item>
      <title>OpenGL</title>
      <link>http://localhost:1313/frameworks/opengl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/opengl/</guid>
      <description> What is it? OpenGL is a standardised graphics framework which provides direct access to video hardware using a common interface.
What is it like? The learning curve is quite steep but in the right hands it is very powerful, dependable and fast.
I have been experimenting with OpenGL for the past couple of months and will continue to do so.
Projects  </description>
    </item>
    
    <item>
      <title>ReactJS</title>
      <link>http://localhost:1313/frameworks/reactjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/reactjs/</guid>
      <description>What is it? ReactJS is a JavaScript library for building single page web applications.
What is it like? ReactJS can be quite powerful when used in conjunction with Redux state management to provide a single source of truth for web application data.
ReactJS uses a component based architecture (somewhat like VueJS and Polymer) where each is self contained with a test spec file and stylesheet.
This makes unit testing for an application a breeze and promotes good separation of concerns.</description>
    </item>
    
    <item>
      <title>Redux</title>
      <link>http://localhost:1313/frameworks/redux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/redux/</guid>
      <description>What is it? Redux is a state management container for Javascript applications.
How does it work? Redux is a state management library that provides a single source of truth for web application data. It is used primarily with the ReactJS Javascript library to manage data for components.
Maintaining a predictable state works as follows: - key components (such as an item detail view or filter component) are wrapped inside connected components, which map the application state and actions to that component.</description>
    </item>
    
    <item>
      <title>Sass/SCSS</title>
      <link>http://localhost:1313/frameworks/sass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/sass/</guid>
      <description> What is it? Sass is another CSS preprocessor framework with built in features such as mixins, variables and functions.
What is it like? Fast, powerful, elegant and well documented. I use this for all projects I am working on in conjunction with the Bourbon.io toolset.
Projects  </description>
    </item>
    
    <item>
      <title>ThreeJS</title>
      <link>http://localhost:1313/frameworks/threejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/threejs/</guid>
      <description>What is it? jQuery is a Javascript library designed to simplify cross-platform client side development.
What is it like? Fast and small and very useful for dealing with cross-browser issues (with older browsers) encountered when using standard Javascript.
I have used this in the past and would use it again if support for older browsers was needed, but with advances in modern Javascript I wouldn&amp;rsquo;t use this anymore.
Projects  Deprecation With better standardised browser support and additions to the WebAPI, jQuery is no longer needed unless support for older browsers is an absolute requirement.</description>
    </item>
    
    <item>
      <title>Wordpress</title>
      <link>http://localhost:1313/frameworks/wordpress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/wordpress/</guid>
      <description></description>
    </item>
    
    <item>
      <title>jQuery</title>
      <link>http://localhost:1313/frameworks/jquery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/frameworks/jquery/</guid>
      <description>What is it? jQuery is a Javascript library designed to simplify cross-platform client side development.
What is it like? Fast and small and very useful for dealing with cross-browser issues (with older browsers) encountered when using standard Javascript.
I have used this in the past and would use it again if support for older browsers was needed, but with advances in modern Javascript I wouldn&amp;rsquo;t use this anymore.
Projects  Deprecation With better standardised browser support and additions to the WebAPI, jQuery is no longer needed unless support for older browsers is an absolute requirement.</description>
    </item>
    
  </channel>
</rss>